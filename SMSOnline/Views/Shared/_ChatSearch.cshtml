@using SMSOnline.Helpers
@{
    var currentUser = IdentityHelper.GetAllInfoCurrentLogged();
}
<div class="col-lg-4 chat-sidebar border-right">

    @*begin::chat sidebar search*@
    <div class="chat-sidebar-header">
        <div class="d-flex">
            <div class="pr-3">
                <div class="avatar avatar-md">
                    <img src="@(string.IsNullOrWhiteSpace(currentUser.Avatar) ? Common.Constants.AvatarDefault : currentUser.Avatar)" class="rounded-circle"
                         height="128" width="128" alt="image">
                </div>
            </div>
            <div class="d-flex align-items-center">
                <h5 class="mb-1">@currentUser.FullName</h5>
            </div>
            <div class="ml-auto">
                <div class="dropdown">
                    <a href="#" data-toggle="dropdown">
                        <i class="width-18 height-18" data-toggle="tooltip" title="Settings"
                           data-feather="settings"></i>
                    </a>
                    <div class="dropdown-menu dropdown-menu-right">
                        <a class="dropdown-item" onclick="window.location.href = '/Contact/Profile?profileId=@currentUser.Id'">View Profile</a>
                        <a class="dropdown-item" onclick="window.location.href = '/Contact/EditProfile'">Edit Profile</a>
                    </div>
                </div>
            </div>
        </div>
        <form>
            <div class="input-group">
                <input type="text" class="form-control" placeholder="Chat search">
                <div class="input-group-append">
                    <button class="btn btn-outline-light" type="button">
                        <i class="ti-search"></i>
                    </button>
                </div>
            </div>
        </form>
        <ul class="nav nav-tabs" id="pills-tab" role="tablist">
            <li class="nav-item">
                <a class="nav-link active" id="pills-home-tab" data-toggle="pill" href="#pills-home"
                   role="tab" aria-controls="pills-home" aria-selected="true">Chats</a>
            </li>

            <li class="nav-item">
                <a class="nav-link" id="pills-contact-tab" data-toggle="pill" href="#pills-contact"
                   role="tab" aria-controls="pills-contact" aria-selected="false">Contacts</a>
            </li>
        </ul>
    </div>
    @*begin::chat sidebar search
        end::chat list*@
    <div class="chat-sidebar-content">
        <div class="tab-content pt-3" id="pills-tabContent">
            <div class="tab-pane fade show active" id="pills-home" role="tabpanel"
                 aria-labelledby="pills-home-tab">
                <p class="small mb-0">Recent chats</p>
                <div class="chat-lists">
                    <div class="list-group list-group-flush">
                        @if (Model.Chat.ListChat != null)
                        {
                            foreach (var item in Model.Chat.ListChat)
                            {
                                var name = string.Empty;
                                var image = string.Empty;
                                bool isLogged = false;
                                var profileId = string.Empty;
                                if (currentUser.Id == item.UserSentId)
                                {
                                    var user = IdentityHelper.GetUserById(item.UserReceivedId);
                                    name = item.FullNameReceived;
                                    image = string.IsNullOrWhiteSpace(user.Avatar) ? Common.Constants.AvatarDefault : user.Avatar;
                                    isLogged = IdentityHelper.IsUserLogged(user.UserName);
                                    profileId = item.UserReceivedId;

                                }
                                else
                                {
                                    var user = IdentityHelper.GetUserById(item.UserSentId);
                                    name = item.FullNameSent;
                                    image = string.IsNullOrWhiteSpace(user.Avatar) ? Common.Constants.AvatarDefault : user.Avatar;
                                    isLogged = IdentityHelper.IsUserLogged(user.UserName);
                                    profileId = item.UserSentId;
                                }

                                <a onclick="window.location.href='/Chat/Index?profileId=@profileId'"
                                   class="list-group-item d-flex align-items-center link-1 pl-0 pr-0 pb-3 pt-3">
                                    <div class="pr-3">
                                        <div class="avatar avatar-sm @(isLogged ? "avatar-state-success" : "avatar-state-danger")">
                                            <span class="avatar-title bg-success rounded-circle">F</span>
                                        </div>
                                    </div>
                                    <div>
                                        <h6 class="mb-1">@name</h6>

                                        <span class="small text-muted">@item.Content</span>
                                    </div>
                                    <div class="text-right ml-auto">
                                        <span class="small text-muted">@item.DateCreatedFormat</span>
                                    </div>
                                </a>
                            }
                        }

                    </div>
                </div>
            </div>
            <div class="tab-pane fade" id="pills-contact" role="tabpanel"
                 aria-labelledby="pills-contact-tab">
                <p class="small mb-0">@Model.Chat.Contact.Count Contacts</p>

                @if (Model.Chat.Contact != null)
                {<div>
                        <ul class="list-group list-group-flush">
                            @foreach (var item in Model.Chat.Contact)
                            {
                                var name = string.Empty;
                                var image = string.Empty;
                                bool isLogged = false;
                                var profileId = string.Empty;
                                if (currentUser.Id == item.ContactSentId)
                                {
                                    var user = IdentityHelper.GetUserById(item.ContactReceivedId);
                                    name = item.FullNameContactReceived;
                                    image = string.IsNullOrWhiteSpace(user.Avatar) ? Common.Constants.AvatarDefault : user.Avatar;
                                    isLogged = IdentityHelper.IsUserLogged(user.UserName);
                                    profileId = item.ContactReceivedId;

                                }
                                else
                                {
                                    var user = IdentityHelper.GetUserById(item.ContactSentId);
                                    name = item.FullNameContactSent;
                                    image = string.IsNullOrWhiteSpace(user.Avatar) ? Common.Constants.AvatarDefault : user.Avatar;
                                    isLogged = IdentityHelper.IsUserLogged(user.UserName);
                                    profileId = item.ContactSentId;
                                }
                                <li class="list-group-item d-flex align-items-center pl-0 pr-0 pb-3 pt-3">
                                    <div class="pr-3">
                                        <div class="avatar avatar-sm @(isLogged ? "avatar-state-success" : "avatar-state-danger")">
                                            <span class="avatar-title bg-success rounded-circle">A</span>
                                        </div>
                                    </div>
                                    <div>
                                        <h6 class="mb-1">@name</h6>
                                    </div>
                                    <div class="text-right ml-auto">
                                        <a onclick="window.location.href='/Chat/Index?profileId=@profileId'" class="p-1">
                                            <i data-feather="message-circle" class="width-18 height-18"></i>
                                        </a>
                                    </div>
                                </li>
                            }
                        </ul>
                    </div>
                }



            </div>

        </div>
    </div>
    @*end::chat list*@
</div>
